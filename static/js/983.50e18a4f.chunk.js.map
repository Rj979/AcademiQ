{"version":3,"file":"static/js/983.50e18a4f.chunk.js","mappings":"yMAQA,MAgPA,EAhPmBA,KACjB,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,YAAWC,EAAAA,IAC1BC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,KAC1BK,EAAMC,IAAWN,EAAAA,EAAAA,UAAS,KAC1BO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,KAC5BS,EAAUC,IAAeV,EAAAA,EAAAA,WAAS,IAClCW,EAAIC,IAASZ,EAAAA,EAAAA,UAAS,IAGvBa,EAAkBC,UACtBf,EAAc,IACdS,EAAS,IACTO,EAAEC,iBACFR,EAAS,IACT,IACE,MAAMS,QAAiBC,EAAAA,EAAMC,IAAI,eAADC,OAAgBnB,EAAK,KAAAmB,OAAIjB,EAAI,KAAAiB,OAAIf,IAEjEO,EAAMK,EAASI,KAAKC,KACpBvB,EAAckB,EAASI,KAAKvB,YAC5BY,GAAY,EACd,CAAE,MAAOa,GAGP,GAFAf,EAASe,GAEmB,MAAxBA,EAAIN,SAASO,OAAgB,CAC/B,MAEMC,SAFiBP,EAAAA,EAAMC,IAAI,SAAWlB,IAElBoB,KAAKI,SAC/BA,EAASC,QAASC,IAChBC,OAAOC,OAAOF,EAAS,CAAEG,SAAS,MAEpC/B,EAAc0B,GACdf,GAAY,EACd,CACF,GAyDIqB,EAAoBhB,IAGxB,MAAMiB,EAAQC,SAASlB,EAAEmB,OAAOvB,IAC1BwB,EAAarC,EAAWkC,GAC9BG,EAAWL,SAAWK,EAAWL,QACjC,MAAMM,EAAgBtC,EAAWuC,IAAI,CAACV,EAASK,KAC/BC,SAASlB,EAAEmB,OAAOvB,IAAYgB,IAG9C5B,EAAcqC,IAGhB,OACEE,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAYC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8KAA6KC,SAAC,gBAG5LC,EAAAA,EAAAA,KAAA,WAASF,UAAU,mBAAkBC,UACnCF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,0CAAyCC,SAAA,EACvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,MAAMG,QAAQ,QAAOF,SAAC,kBAGvCF,EAAAA,EAAAA,MAAA,UACEC,UAAU,yPACVI,KAAK,QACLhC,GAAG,QACHiC,MAAO3C,EACP4C,UAAQ,EACRC,SAAW/B,GAAMb,EAASa,EAAEmB,OAAOU,OAAOJ,SAAA,EAE1CC,EAAAA,EAAAA,KAAA,UAAQM,cAAY,EAACC,QAAM,EAAAR,SAAC,QAG3B7C,EAAU0C,IAAI,CAACpC,EAAO+B,KACrBS,EAAAA,EAAAA,KAAA,UAAoBG,MAAO3C,EAAMqB,IAAIkB,SAClCvC,EAAMA,OADI+B,WAMnBM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,MAAMG,QAAQ,OAAMF,SAAC,iBAGtCC,EAAAA,EAAAA,KAAA,SACEF,UAAU,8PACV5B,GAAG,OACHsC,KAAK,OACLN,KAAK,OACLC,MAAOzC,EACP2C,SAAW/B,GAAMX,EAAQW,EAAEmB,OAAOU,aAGtCN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,MAAMG,QAAQ,OAAMF,SAAC,iBAItCF,EAAAA,EAAAA,MAAA,UACEC,UAAU,wPACVI,KAAK,OACLhC,GAAG,OACHiC,MAAOvC,EACPwC,UAAQ,EACRC,SAAW/B,GAAMT,EAAQS,EAAEmB,OAAOU,OAAOJ,SAAA,EAEzCC,EAAAA,EAAAA,KAAA,UAAQM,cAAY,EAACC,QAAM,EAAAR,SAAC,SAG5BC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,IAAGJ,SAAC,OAClBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,IAAGJ,SAAC,QAClBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,IAAGJ,SAAC,SAClBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,IAAGJ,SAAC,QAClBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,IAAGJ,SAAC,aAGtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,KAAA,UACEF,UAAU,6SACVU,KAAK,SACLC,QAAUnC,GAAMF,EAAgBE,GAAGyB,SACpC,kBAMPC,EAAAA,EAAAA,KAAA,OAAAD,SAAMjC,GAAQkC,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAAC5C,MAAOA,IAAY,MAC7CkC,EAAAA,EAAAA,KAAA,WAASF,UAAU,mBAAkBC,UACnCF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,SAAQC,SAAA,CACX,OAAV1C,QAAU,IAAVA,GAAAA,EAAYsD,QACXX,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+FAA8FC,UAC3GF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,SAAQC,SAAA,EACvBC,EAAAA,EAAAA,KAACY,EAAAA,EAAW,CAACC,QAAS,CAAC,UAAW,cAClCb,EAAAA,EAAAA,KAAA,SAAAD,SACa,OAAV1C,QAAU,IAAVA,OAAU,EAAVA,EAAYuC,IAAI,CAACV,EAASK,KACzBS,EAAAA,EAAAA,KAACc,EAAAA,EAAe,CAEdC,KAAMxB,EACNvB,SAAUA,EACVmC,MAAOjB,EACPI,iBAAkBA,GAJbC,WAWf,GAEDlC,EAAWsD,QAAU3C,GACpB6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,UACEW,KAAK,SACLV,UAAU,qSACVW,QAAUnC,GAAML,GAAY,GAAO8B,SAAA,EAEnCC,EAAAA,EAAAA,KAACgB,EAAAA,IAAM,IAAG,YAEZnB,EAAAA,EAAAA,MAAA,UACEW,KAAK,SACLV,UAAU,gSACVW,QAAUnC,GA1ICD,WACvBC,EAAEC,iBACF,IACE,MAAMC,QAAiBC,EAAAA,EAAMwC,OAAO,cAAgB/C,GACpDgD,EAAAA,GAAMC,QAAQ3C,EAASI,KAAKwC,QAAS,CACnCC,KAAMC,IAAA,IAAC,MAAEC,EAAK,KAAEf,GAAMc,EAAA,OAAKtB,EAAAA,EAAAA,KAACwB,EAAAA,IAAO,OAErClE,EAAc,GAChB,CAAE,MAAOwB,GACPf,EAASe,EACX,GAgI4B2C,CAAiBnD,GAAGyB,SAAA,EAEpCC,EAAAA,EAAAA,KAACwB,EAAAA,IAAO,IAAG,gBAIf,GAES,OAAVnE,QAAU,IAAVA,GAAAA,EAAYsD,SAAW3C,GACtB6B,EAAAA,EAAAA,MAAA,UACEW,KAAK,SACLV,UAAU,sSACVW,QAAUnC,GA7LAD,WACpBC,EAAEC,iBAEF,MAAMmD,EAAUrE,EAAWuC,IAAK+B,IACvB,CAAEzC,QAASyC,EAAE9C,IAAKQ,QAASsC,EAAEtC,WAEtC,IAEE,MAAMb,QAAiBC,EAAAA,EAAMmD,KAAK,eAADjD,OAChBnB,EAAK,KAAAmB,OAAIjB,EAAI,KAAAiB,OAAIf,GAChC,CAAEJ,QAAOE,OAAME,OAAMP,WAAYqE,IAEnCR,EAAAA,GAAMC,QAAQ3C,EAASI,KAAKwC,SAC5BnD,GAAY,GACZF,EAAS,IACTK,EAAgBE,EAClB,CAAE,MAAOQ,GAEP,GAA6B,OAAtB,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKN,SAASO,QAAgB,CAChC,MAAM2C,EAAUrE,EAAWuC,IAAK+B,IACvB,CAAEzC,QAASyC,EAAEzC,QAAQL,IAAKQ,QAASsC,EAAEtC,WAE9C,IAEE,MAAMb,QAAiBC,EAAAA,EAAMoD,MAAM,eAADlD,OACjBnB,EAAK,KAAAmB,OAAIjB,EAAI,KAAAiB,OAAIf,GAChC,CAAEM,KAAIV,QAAOE,OAAME,OAAMP,WAAYqE,IAEvCR,EAAAA,GAAMC,QAAQ3C,EAASI,KAAKwC,SAC5BnD,GAAY,GACZF,EAAS,IACTK,EAAgBE,EAClB,CAAE,MAAOQ,GACPf,EAASe,EACX,CACF,MAAOf,EAASe,EAClB,GAyJ0BgD,CAAcxD,GAAGyB,SAAA,EAEjCC,EAAAA,EAAAA,KAAC+B,EAAAA,IAAM,IAAG,WAGZ,W","sources":["Components/Queries/Attendance.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"../../config/api/axios\";\nimport UserContext from \"../../Hooks/UserContext\";\nimport { FaPlus, FaEdit, FaTrash } from \"react-icons/fa\";\nimport { toast } from \"react-toastify\";\nimport { TableHeader, RowWithCheckbox } from \"../Table\";\nimport ErrorStrip from \"../ErrorStrip\";\n\nconst Attendance = () => {\n  const { paperList } = useContext(UserContext);\n  const [attendance, setAttendance] = useState([]);\n  const [paper, setPaper] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [id, setId] = useState(\"\");\n\n  // fetching Attendance\n  const fetchAttendance = async (e) => {\n    setAttendance([]);\n    setError(\"\");\n    e.preventDefault();\n    setError(\"\");\n    try {\n      const response = await axios.get(`/attendance/${paper}/${date}/${hour}`);\n      // saving the record ID for Updating/Deleting record\n      setId(response.data._id);\n      setAttendance(response.data.attendance);\n      setDisabled(true);\n    } catch (err) {\n      setError(err);\n      // in case no attendance record exists\n      if (err.response.status === 404) {\n        const response = await axios.get(\"paper/\" + paper);\n        // students list is fetched and mapped to add \"present\" value\n        const students = response.data.students;\n        students.forEach((student) => {\n          Object.assign(student, { present: true });\n        });\n        setAttendance(students);\n        setDisabled(false);\n      }\n    }\n  };\n\n  // adding new attendance and updating existing attendance record\n  const addAttendance = async (e) => {\n    e.preventDefault();\n    // removing student names from data since only studentId is stored in database\n    const newData = attendance.map((i) => {\n      return { student: i._id, present: i.present };\n    });\n    try {\n      // adding a new attendance record\n      const response = await axios.post(\n        `/attendance/${paper}/${date}/${hour}`,\n        { paper, date, hour, attendance: newData }\n      );\n      toast.success(response.data.message);\n      setDisabled(true);\n      setError(\"\");\n      fetchAttendance(e);\n    } catch (err) {\n      // conflict, attendance record already exists\n      if (err?.response.status === 409) {\n        const newData = attendance.map((i) => {\n          return { student: i.student._id, present: i.present };\n        });\n        try {\n          // updating the old attendance record\n          const response = await axios.patch(\n            `/attendance/${paper}/${date}/${hour}`,\n            { id, paper, date, hour, attendance: newData }\n          );\n          toast.success(response.data.message);\n          setDisabled(true);\n          setError(\"\");\n          fetchAttendance(e);\n        } catch (err) {\n          setError(err);\n        }\n      } else setError(err);\n    }\n  };\n\n  const deleteAttendance = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.delete(\"attendance/\" + id);\n      toast.success(response.data.message, {\n        icon: ({ theme, type }) => <FaTrash />,\n      });\n      setAttendance([]);\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  // updating attendance state on \"onChange\" event.\n  const handleFormChange = (e) => {\n    // the whole thing is a convoluted mess, but it works.\n    // if you have an alternative, DM ;).\n    const index = parseInt(e.target.id);\n    const newStudent = attendance[index];\n    newStudent.present = !newStudent.present;\n    const newAttendance = attendance.map((student, index) => {\n      if (index === parseInt(e.target.id)) return student;\n      else return student;\n    });\n    setAttendance(newAttendance);\n  };\n\n  return (\n    <main className=\"attendance\">\n      <h2 className=\"mb-2 mt-3 whitespace-break-spaces text-4xl font-bold text-violet-950 underline decoration-inherit decoration-2 underline-offset-4 dark:mt-0 dark:text-slate-400 md:text-6xl\">\n        Attendance\n      </h2>\n      <section className=\"attendance__head\">\n        <form className=\"w-full gap-4 accent-violet-900 md:flex \">\n          <div className=\"flex w-full flex-col\">\n            <label className=\"m-1\" htmlFor=\"paper\">\n              Select Paper\n            </label>\n            <select\n              className=\"mb-4 block h-10  rounded-md border-[1.5px] border-solid border-slate-400 p-1 pl-2 outline-none selection:border-slate-200 focus:border-violet-900 dark:border-slate-200 dark:caret-inherit dark:focus:border-violet-400 dark:active:border-violet-400 \"\n              name=\"paper\"\n              id=\"paper\"\n              value={paper}\n              required\n              onChange={(e) => setPaper(e.target.value)}\n            >\n              <option defaultValue hidden>\n                ---\n              </option>\n              {paperList.map((paper, index) => (\n                <option key={index} value={paper._id}>\n                  {paper.paper}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"flex w-full flex-col\">\n            <label className=\"m-1\" htmlFor=\"date\">\n              Select Date\n            </label>\n            <input\n              className=\"mb-4 block h-10 w-full rounded-md border-[1.5px] border-solid border-slate-400 p-1 pl-2 outline-none selection:border-slate-200 focus:border-violet-900 dark:border-slate-200 dark:caret-inherit dark:focus:border-violet-400 dark:active:border-violet-400\"\n              id=\"date\"\n              type=\"date\"\n              name=\"date\"\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n            />\n          </div>\n          <div className=\"flex w-full flex-col\">\n            <label className=\"m-1\" htmlFor=\"hour\">\n              Select Hour\n            </label>\n\n            <select\n              className=\"mb-4 h-10 w-full rounded-md border-[1.5px] border-solid border-slate-400 p-1 pl-2 outline-none selection:border-slate-200 focus:border-violet-900 dark:border-slate-200 dark:caret-inherit dark:focus:border-violet-400 dark:active:border-violet-400\"\n              name=\"hour\"\n              id=\"hour\"\n              value={hour}\n              required\n              onChange={(e) => setHour(e.target.value)}\n            >\n              <option defaultValue hidden>\n                ---\n              </option>\n              <option value=\"1\">I</option>\n              <option value=\"2\">II</option>\n              <option value=\"3\">III</option>\n              <option value=\"4\">IV</option>\n              <option value=\"5\">V</option>\n            </select>\n          </div>\n          <div className=\"flex items-end\">\n            <button\n              className=\" mb-4 h-10 rounded-md border-[1.5px] border-solid border-violet-900 bg-slate-800 px-8 py-2 font-semibold tracking-wide text-slate-200 hover:bg-violet-900 focus:bg-violet-900 disabled:cursor-not-allowed dark:border-violet-300 dark:bg-violet-900 dark:text-violet-100 dark:hover:bg-slate-900 md:w-auto\"\n              type=\"submit\"\n              onClick={(e) => fetchAttendance(e)}\n            >\n              Fetch\n            </button>\n          </div>\n        </form>\n      </section>\n      <div>{error ? <ErrorStrip error={error} /> : \"\"}</div>\n      <section className=\"attendance__form\">\n        <form className=\"w-full\">\n          {attendance?.length ? (\n            <div className=\"my-4 w-full rounded-md border-2 border-slate-900 dark:border-slate-500 dark:p-[1px] lg:w-1/2\">\n              <table className=\"w-full\">\n                <TableHeader Headers={[\"Present\", \"Student\"]} />\n                <tbody>\n                  {attendance?.map((student, index) => (\n                    <RowWithCheckbox\n                      key={index}\n                      keys={index}\n                      disabled={disabled}\n                      value={student}\n                      handleFormChange={handleFormChange}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {attendance.length && disabled ? (\n            <div className=\"flex gap-4\">\n              <button\n                type=\"submit\"\n                className=\"mb-4 flex h-10 w-auto items-center gap-2 rounded-md border-[1.5px] border-solid border-violet-900 bg-slate-800 px-6 py-2 font-semibold tracking-wide text-slate-200 hover:bg-violet-900 focus:bg-violet-900 dark:border-violet-300 dark:bg-violet-900 dark:text-violet-100 dark:hover:bg-slate-900\"\n                onClick={(e) => setDisabled(false)}\n              >\n                <FaEdit /> Edit\n              </button>\n              <button\n                type=\"submit\"\n                className=\"mb-4 flex h-10 w-auto items-center gap-2 rounded-md border-[1.5px] border-solid border-violet-900 bg-slate-800 px-4 py-2 font-semibold tracking-wide text-slate-200 hover:bg-red-700 focus:bg-violet-900 dark:border-violet-300 dark:bg-violet-900 dark:text-violet-100 dark:hover:bg-red-700\"\n                onClick={(e) => deleteAttendance(e)}\n              >\n                <FaTrash /> Delete\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {attendance?.length && !disabled ? (\n            <button\n              type=\"submit\"\n              className=\"mb-4 flex h-10 w-auto items-center gap-2 rounded-md border-[1.5px] border-solid border-violet-900 bg-slate-800 px-4 py-2 font-semibold tracking-wide text-slate-200 hover:bg-violet-900 focus:bg-violet-900 dark:border-violet-300 dark:bg-violet-900 dark:text-violet-100 dark:hover:bg-slate-900 \"\n              onClick={(e) => addAttendance(e)}\n            >\n              <FaPlus /> Save\n            </button>\n          ) : (\n            \"\"\n          )}\n        </form>\n      </section>\n    </main>\n  );\n};\nexport default Attendance;\n"],"names":["Attendance","paperList","useContext","UserContext","attendance","setAttendance","useState","paper","setPaper","date","setDate","hour","setHour","error","setError","disabled","setDisabled","id","setId","fetchAttendance","async","e","preventDefault","response","axios","get","concat","data","_id","err","status","students","forEach","student","Object","assign","present","handleFormChange","index","parseInt","target","newStudent","newAttendance","map","_jsxs","className","children","_jsx","htmlFor","name","value","required","onChange","defaultValue","hidden","type","onClick","ErrorStrip","length","TableHeader","Headers","RowWithCheckbox","keys","FaEdit","delete","toast","success","message","icon","_ref","theme","FaTrash","deleteAttendance","newData","i","post","patch","addAttendance","FaPlus"],"sourceRoot":""}